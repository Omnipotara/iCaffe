/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package view;

import view.prodaja.RacunForma;
import view.usluga.UslugeForma;
import view.musterija.KategorijeMusterijaForma;
import view.angazovanje.AngazovanjaForma;
import view.angazovanje.PostaviAngazovanjeForma;
import java.util.List;
import javax.swing.JOptionPane;
import kontroler.Kontroler;
import model.Musterija;
import model.Prodavac;
import modeli.ModelTabeleMusterija;
import server.ObradiKlijentskiZahtev;
import server.PokreniServer;

/**
 *
 * @author Omnix
 */
public class ServerForma extends javax.swing.JFrame {

    private PokreniServer ps;
    private PostaviAngazovanjeForma paf;
    private Prodavac p;

    /**
     * Creates new form ServerForma
     */
    public ServerForma() {
        initComponents();
    }

    public ServerForma(Prodavac p) {
        initComponents();
        Kontroler.getInstance().setSf(this);
        this.p = p;
        setTitle("Zdravo " + p.getIme() + "!");
        ps = new PokreniServer();
        ps.start();
        paf = new PostaviAngazovanjeForma(this, true, p, null, null);
        paf.setVisible(true);

        osveziTabelu();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMusterije = new javax.swing.JTable();
        btnProdaj = new javax.swing.JButton();
        btnOdloguj = new javax.swing.JButton();
        btnObrisi = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemAngazovanja = new javax.swing.JMenuItem();
        menuItemKategorijeMusterija = new javax.swing.JMenuItem();
        menuItemUsluge = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        tblMusterije.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(tblMusterije);

        btnProdaj.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        btnProdaj.setText("PRODAJ");
        btnProdaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProdajActionPerformed(evt);
            }
        });

        btnOdloguj.setText("ODLOGUJ");
        btnOdloguj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdlogujActionPerformed(evt);
            }
        });

        btnObrisi.setText("OBRISI");
        btnObrisi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnObrisiActionPerformed(evt);
            }
        });

        menuFile.setText("File");

        menuItemAngazovanja.setText("Angazovanja");
        menuItemAngazovanja.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemAngazovanjaActionPerformed(evt);
            }
        });
        menuFile.add(menuItemAngazovanja);

        menuItemKategorijeMusterija.setText("Kategorije musterija");
        menuItemKategorijeMusterija.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemKategorijeMusterijaActionPerformed(evt);
            }
        });
        menuFile.add(menuItemKategorijeMusterija);

        menuItemUsluge.setText("Usluge");
        menuItemUsluge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuItemUslugeActionPerformed(evt);
            }
        });
        menuFile.add(menuItemUsluge);

        jMenuBar1.add(menuFile);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 655, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnProdaj, javax.swing.GroupLayout.DEFAULT_SIZE, 178, Short.MAX_VALUE)
                    .addComponent(btnOdloguj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btnObrisi, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnObrisi, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnOdloguj, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnProdaj, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 361, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void menuItemAngazovanjaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemAngazovanjaActionPerformed
        AngazovanjaForma af = new AngazovanjaForma(this, false);
        af.setVisible(true);
    }//GEN-LAST:event_menuItemAngazovanjaActionPerformed

    private void menuItemKategorijeMusterijaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemKategorijeMusterijaActionPerformed
        KategorijeMusterijaForma kmf = new KategorijeMusterijaForma(this, false);
        kmf.setVisible(true);
    }//GEN-LAST:event_menuItemKategorijeMusterijaActionPerformed

    private void menuItemUslugeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuItemUslugeActionPerformed
        UslugeForma uf = new UslugeForma(this, false);
        uf.setVisible(true);
    }//GEN-LAST:event_menuItemUslugeActionPerformed

    private void btnProdajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProdajActionPerformed
        int selektovaniRed = tblMusterije.getSelectedRow();
        Musterija kupac = odaberiMusteriju(selektovaniRed);

        if (kupac == null) {
            return;
        }

        RacunForma rf = new RacunForma(this, true, p, kupac);
        rf.setVisible(true);
    }//GEN-LAST:event_btnProdajActionPerformed

    private void btnOdlogujActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdlogujActionPerformed
        int selektovaniRed = tblMusterije.getSelectedRow();
        Musterija kupac = odaberiMusteriju(selektovaniRed);

        if (kupac == null) {
            return;
        }

        List<Musterija> listaUlogovanih = Kontroler.getInstance().vratiListuOnlineMusterija();
        if (listaUlogovanih.contains(kupac)) {
            for (ObradiKlijentskiZahtev okz : Kontroler.getInstance().getListaNiti()) {
                if (okz.getUlogovani() != null && okz.getUlogovani().equals(kupac)) {
                    okz.serverskiLogoutKupca(kupac);
                    return;
                }
            }
        } else {
            JOptionPane.showMessageDialog(this, "Taj musterija vec nije online!");
            return;
        }


    }//GEN-LAST:event_btnOdlogujActionPerformed

    private void btnObrisiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnObrisiActionPerformed
        int selektovaniRed = tblMusterije.getSelectedRow();
        Musterija kupac = odaberiMusteriju(selektovaniRed);

        if (kupac == null) {
            return;
        }

        List<Musterija> listaUlogovanih = Kontroler.getInstance().vratiListuOnlineMusterija();
        if (!listaUlogovanih.contains(kupac)) {
            boolean obrisan = Kontroler.getInstance().obrisi(kupac);

            if (obrisan) {
                osveziTabelu();
                JOptionPane.showMessageDialog(this, "Uspesno ste obrisali musteriju.");
                return;
            } else {
                JOptionPane.showMessageDialog(this, "Doslo je do greske prilikom brisanjas.");
                return;
            }
        } else {
            JOptionPane.showMessageDialog(this, "Musterija je online, prvo ga odlogujte!");
            return;
        }

    }//GEN-LAST:event_btnObrisiActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ServerForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ServerForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ServerForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ServerForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerForma().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnObrisi;
    private javax.swing.JButton btnOdloguj;
    private javax.swing.JButton btnProdaj;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenuItem menuItemAngazovanja;
    private javax.swing.JMenuItem menuItemKategorijeMusterija;
    private javax.swing.JMenuItem menuItemUsluge;
    private javax.swing.JTable tblMusterije;
    // End of variables declaration//GEN-END:variables

    public void osveziTabelu() {
        List<Musterija> listaMusterija = Kontroler.getInstance().vratiSve(new Musterija());
        List<Musterija> listaOnlineMusterija = Kontroler.getInstance().vratiListuOnlineMusterija();
        ModelTabeleMusterija mtm = new ModelTabeleMusterija(listaMusterija, listaOnlineMusterija);
        tblMusterije.setModel(mtm);
    }

    private Musterija odaberiMusteriju(int selektovaniRed) {
        if (selektovaniRed == -1) {
            JOptionPane.showMessageDialog(this, "Izaberite musteriju.");
            return null;
        }

        ModelTabeleMusterija mtm = (ModelTabeleMusterija) tblMusterije.getModel();
        List<Musterija> listaMusterija = mtm.getListaMusterija();
        Musterija kupac = listaMusterija.get(selektovaniRed);
        return kupac;
    }
}
