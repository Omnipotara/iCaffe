/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JDialog.java to edit this template
 */
package view.prodaja;

import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import kontroler.Kontroler;
import model.Racun;
import model.StavkaRacuna;
import model.Usluga;
import view.RacunDetaljnijeForma;

/**
 *
 * @author Omnix
 */

public class PostaviStavkuForma extends javax.swing.JDialog {

    private RacunForma rf = null;
    private RacunDetaljnijeForma rdf = null;
    private StavkaRacuna sr;

    /**
     * Creates new form PostaviStavkuForma
     */
    public PostaviStavkuForma(java.awt.Frame parent, boolean modal) {
        super(parent, modal);
        initComponents();
    }

    public PostaviStavkuForma(java.awt.Frame parent, boolean modal, RacunForma rf, StavkaRacuna sr) {
        super(parent, modal);
        initComponents();
        napuniCombobox();
        this.rf = rf;

        if (sr == null) {
            btnIzmeni.setVisible(false);
        } else {
            this.sr = sr;
            btnDodaj.setVisible(false);
            cmbUsluge.setEnabled(false);
            cmbUsluge.setSelectedItem(sr.getUsluga());
            txtKolicina.setText(String.valueOf(sr.getKolicina()));
            txtCena.setText(String.valueOf(sr.getCenaStavke()));
        }

        //Listener za txt field
        txtKolicina.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateCena();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateCena();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateCena();
            }

        });
    }

    public PostaviStavkuForma(java.awt.Frame parent, boolean modal, RacunDetaljnijeForma rdf, StavkaRacuna sr) {
        super(parent, modal);
        initComponents();
        napuniCombobox();
        this.rdf = rdf;

        if (sr == null) {
            btnIzmeni.setVisible(false);
        } else {
            this.sr = sr;
            btnDodaj.setVisible(false);
            cmbUsluge.setEnabled(false);
            cmbUsluge.setSelectedItem(sr.getUsluga());
            txtKolicina.setText(String.valueOf(sr.getKolicina()));
            txtCena.setText(String.valueOf(sr.getCenaStavke()));
        }

        //Listener za txt field
        txtKolicina.getDocument().addDocumentListener(new DocumentListener() {
            @Override
            public void insertUpdate(DocumentEvent e) {
                updateCena();
            }

            @Override
            public void removeUpdate(DocumentEvent e) {
                updateCena();
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
                updateCena();
            }

        });
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtKolicina = new javax.swing.JTextField();
        cmbUsluge = new javax.swing.JComboBox<>();
        btnDodaj = new javax.swing.JButton();
        btnOdustani = new javax.swing.JButton();
        btnIzmeni = new javax.swing.JButton();
        txtCena = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Proizvod");

        jLabel2.setText("Kolicina");

        jLabel3.setText("Cena");

        txtKolicina.setText("1");

        cmbUsluge.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUslugeActionPerformed(evt);
            }
        });

        btnDodaj.setText("Dodaj");
        btnDodaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDodajActionPerformed(evt);
            }
        });

        btnOdustani.setText("Odustani");
        btnOdustani.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnOdustaniActionPerformed(evt);
            }
        });

        btnIzmeni.setText("Izmeni");
        btnIzmeni.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnIzmeniActionPerformed(evt);
            }
        });

        txtCena.setEditable(false);
        txtCena.setText("0");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(cmbUsluge, 0, 309, Short.MAX_VALUE)
                                .addComponent(txtKolicina))
                            .addComponent(txtCena, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 309, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(cmbUsluge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtKolicina, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtCena, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 38, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDodaj, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnOdustani, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnIzmeni, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnOdustaniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnOdustaniActionPerformed
        this.dispose();
    }//GEN-LAST:event_btnOdustaniActionPerformed

    private void btnDodajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDodajActionPerformed
        Usluga u = (Usluga) cmbUsluge.getSelectedItem();
        double cena = Double.parseDouble(txtCena.getText());
        int kolicina = 1;

        try {
            kolicina = Integer.parseInt(txtKolicina.getText());
            if (kolicina < 1) {
                JOptionPane.showMessageDialog(this, "Unesite 1 ili vise za kolicinu.");
                return;
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Unesite broj za kolicinu.");
            return;
        }

        if (rdf == null && rf != null) {
            Racun r = rf.getR();
            List<StavkaRacuna> listaStavki = rf.getListaStavki();

            // Provera da li vec postoji stavka sa istom uslugom
            StavkaRacuna postojecaStavka = null;
            for (StavkaRacuna stavka : listaStavki) {
                if (stavka.getUsluga().getId() == u.getId()) {
                    postojecaStavka = stavka;
                    break;
                }
            }

            if (postojecaStavka != null) {
                // Povecaj kolicinu postojece stavke
                int novaKolicina = postojecaStavka.getKolicina() + kolicina;
                postojecaStavka.setKolicina(novaKolicina);
                postojecaStavka.setCenaStavke(novaKolicina * postojecaStavka.getJedinicnaCena());

                JOptionPane.showMessageDialog(this, "Kolicina je povecana za " + kolicina + ". Nova kolicina: " + novaKolicina);
            } else {
                // Dodaj novu stavku
                StavkaRacuna sr = new StavkaRacuna();
                sr.setKolicina(kolicina);
                sr.setJedinicnaCena(u.getCena());
                sr.setCenaStavke(cena);
                sr.setRacun(r);
                sr.setUsluga(u);

                listaStavki.add(sr);
                JOptionPane.showMessageDialog(this, "Nova stavka je dodata.");
            }

            rf.osveziTabelu();

        } else if (rdf != null && rf == null) {
            Racun r = rdf.getR();
            List<StavkaRacuna> listaStavki = rdf.getListaStavki();

            // Proveri da li vec postoji stavka sa istom uslugom
            StavkaRacuna postojecaStavka = null;
            for (StavkaRacuna stavka : listaStavki) {
                if (stavka.getUsluga().getId() == u.getId()) {
                    postojecaStavka = stavka;
                    break;
                }
            }

            if (postojecaStavka != null) {
                // Povecaj kolicinu postojece stavke
                int novaKolicina = postojecaStavka.getKolicina() + kolicina;
                postojecaStavka.setKolicina(novaKolicina);
                postojecaStavka.setCenaStavke(novaKolicina * postojecaStavka.getJedinicnaCena());

                JOptionPane.showMessageDialog(this, "Količina je povećana za " + kolicina + ". Nova količina: " + novaKolicina);
            } else {
                // Dodaj novu stavku
                StavkaRacuna sr = new StavkaRacuna();
                sr.setKolicina(kolicina);
                sr.setJedinicnaCena(u.getCena());
                sr.setCenaStavke(cena);
                sr.setRacun(r);
                sr.setUsluga(u);

                listaStavki.add(sr);
                JOptionPane.showMessageDialog(this, "Nova stavka je dodana.");
            }

            rdf.osveziTabelu();
        }

        this.dispose();
    }//GEN-LAST:event_btnDodajActionPerformed

    private void btnIzmeniActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnIzmeniActionPerformed
        int kolicina = 1;

        try {
            kolicina = Integer.parseInt(txtKolicina.getText());
            if (kolicina < 1) {
                JOptionPane.showMessageDialog(this, "Unesite 1 ili vise za kolicinu.");
                return;
            }

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Unesite broj za kolicinu.");
            return;
        }

        double cena = Double.parseDouble(txtCena.getText());

        //Menja se lokalni objekat a nista u bazi jos uvek
        sr.setKolicina(kolicina);
        sr.setCenaStavke(cena);

        if (rf != null && rdf == null) {
            rf.osveziTabelu();
            JOptionPane.showMessageDialog(this, "Uspesno izmenjena stavka.");
            this.dispose();

        } else if (rf == null && rdf != null) {
            rdf.osveziTabelu();
            JOptionPane.showMessageDialog(this, "Uspesno izmenjena stavka.");
            this.dispose();

        }


    }//GEN-LAST:event_btnIzmeniActionPerformed

    private void cmbUslugeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUslugeActionPerformed
        updateCena();
    }//GEN-LAST:event_cmbUslugeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
    /* Set the Nimbus look and feel */
    //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
    /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
     */
    try {
        for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
            if ("Nimbus".equals(info.getName())) {
                javax.swing.UIManager.setLookAndFeel(info.getClassName());
                break;
            }
        }
    } catch (ClassNotFoundException ex) {
        java.util.logging.Logger.getLogger(PostaviStavkuForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (InstantiationException ex) {
        java.util.logging.Logger.getLogger(PostaviStavkuForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (IllegalAccessException ex) {
        java.util.logging.Logger.getLogger(PostaviStavkuForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    } catch (javax.swing.UnsupportedLookAndFeelException ex) {
        java.util.logging.Logger.getLogger(PostaviStavkuForma.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
    }
    //</editor-fold>

    /* Create and display the dialog */
    java.awt.EventQueue.invokeLater(new Runnable() {
        public void run() {
            PostaviStavkuForma dialog = new PostaviStavkuForma(new javax.swing.JFrame(), true);
            dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                @Override
                public void windowClosing(java.awt.event.WindowEvent e) {
                    System.exit(0);
                }
            });
            dialog.setVisible(true);
        }
    });
}

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDodaj;
    private javax.swing.JButton btnIzmeni;
    private javax.swing.JButton btnOdustani;
    private javax.swing.JComboBox<Usluga> cmbUsluge;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JTextField txtCena;
    private javax.swing.JTextField txtKolicina;
    // End of variables declaration//GEN-END:variables

    private void napuniCombobox() {
        List<Usluga> listaUsluga = Kontroler.getInstance().vratiSve(new Usluga());

        for (Usluga u : listaUsluga) {
            cmbUsluge.addItem(u);
        }
    }

    private void updateCena() {
        try {
            int kolicina = Integer.parseInt(txtKolicina.getText());
            Usluga u = (Usluga) cmbUsluge.getSelectedItem();
            if (u != null) {
                double cenaPoJedinici = u.getCena();
                double ukupnaCena = kolicina * cenaPoJedinici;
                txtCena.setText(String.valueOf(ukupnaCena));
            } else {
                txtCena.setText("");
            }
        } catch (NumberFormatException ex) {
            txtCena.setText("");
        }
    }
}
